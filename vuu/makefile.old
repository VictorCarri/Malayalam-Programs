exeName=malStrLen
compiler=g++-8
cppDir=./cpp
objDir=./obj
libDirs=$(addprefix -L/usr/local/lib/,boost icu)
libs=$(addprefix -l,$(addprefix boost_,$(addsuffix -mt-x64,program_options filesystem system locale)) $(addprefix icu,data i18n io test tu uc))
dbgLibs=$(addprefix -l,$(addprefix boost_,$(addsuffix -mt-d-x64,program_options filesystem system locale)) $(addprefix icu,data i18n io test tu uc))
objects=$(addprefix $(objDir)/,$(addsuffix .prod.o,LenCounter main))
dbgObjs=$(addprefix $(objDir)/,$(addsuffix .debug.o,LenCounter main))
dbgOpts=-ggdb3 -DDEBUG -save-temps
outLib=vicUniLib
sharedLib=$(outLib).so
staticLib=$(outLib).a
soObjs=$(addprefix $(objDir)/,$(addsuffix .so.o,LenCounter))
statLibObjs=$(addprefix $(objDir)/,$(addsuffix .a.o,LenCounter))

all: $(exeName) $(exeName)-debug $(sharedLib) $(staticLib)

$(exeName): $(objects)
	$(compiler) -o $@ $^ $(libDirs) $(libs)

$(sharedLib): $(soObjs)
	$(compiler) -shared -o $@ $^

$(staticLib): $(statLibObjs)
	ar rcs $@ $^

$(exeName)-debug: $(dbgObjs)
	$(compiler) -o $@ $^ $(libDirs) $(dbgLibs) $(dbgOpts)

$(objDir)/%.prod.o: $(cppDir)/%.cpp
	$(compiler) -o $@ -c $^ -I./hpp

$(objDir)/%.debug.o: $(cppDir)/%.cpp
	$(compiler) -o $@ -c $^ -I./hpp $(dbgOpts)

$(objDir)/%.so.o: $(cppDir)/%.cpp
	$(compiler) -o $@ -c -fPIC $^ -I./hpp

$(objDir)/%.a.o: $(cppDir)/%.cpp
	$(compiler) -o $@ -c $^ -I./hpp -static

clean: $(addprefix clean_,debug prod)
	rm -f $(outLib)*

clean_debug:
	rm -f $(exeName)-debug $(objDir)/*.debug.o

clean_prod:
	rm -f $(exeName) $(objDir)/*.prod.o $(staticLib) $(sharedLib)

rebuild: $(addprefix rebuild_,debug prod)

rebuild_debug: clean_debug $(exeName)-debug

rebuild_prod: clean_prod $(exeName) $(staticLib) $(sharedLib)
